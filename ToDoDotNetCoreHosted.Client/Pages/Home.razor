@page "/"
@using ToDoDotNetCoreHosted.Shared
@using ToDoDotNetCoreHosted.Client
@namespace ToDoDotNetCoreHosted
@inject HttpClient Http
@inject HttpClient Https

<div class="todo-container">
    <h3>To-Do List</h3>
    <div class="todo-input-row">
        <input type="text" id="todoInput" class="todoitem" placeholder="To Do Item Here" @bind="todoString" />
        <button class="add-btn" @onclick="() => AddItem(todoString)">+</button>
    </div>
    <ul class="todo-list">
        @foreach (var item in items)
        {
            <li class="todo-list-item">
                <input type="checkbox" checked="@item.IsCompleted" @onchange="() => ToggleCompleteStatus(item)" />
                <span class="todo-title @(item.IsCompleted ? "completed" : "")">@item.Title</span>
                <button class="edit-btn">Edit</button>
                <button class="delete-btn" @onclick="() => DeleteItem(item)">Delete</button>
            </li>
        }
    </ul>
</div>



@code {
    string? todoString;
    List<ToDoItem> items = new();
    ToDoItem? editingItem;

    protected override async Task OnInitializedAsync()
    {
        items = await Http.GetFromJsonAsync<List<ToDoItem>>("api/todo");
    }

    async Task AddItem(string title)
    {
        var newItem = new ToDoItem { Title = title, IsCompleted = false };
        var response = await Http.PostAsJsonAsync("api/todo", newItem);
        if (response.IsSuccessStatusCode)
        {
            items.Add(await response.Content.ReadFromJsonAsync<ToDoItem>());
        }
    }


    private async Task ToggleCompleteStatus(ToDoItem item)
    {
        item.IsCompleted = !item.IsCompleted;
        var response = await Http.PutAsJsonAsync($"api/todo/{item.Id}", item);
        if (response.IsSuccessStatusCode)
        {
            var index = items.FindIndex(i => i.Id == item.Id);
            if (index != -1)
            {
                items[index] = item;
            }
        }
    }

    private async Task DeleteItem(ToDoItem item)
    {

        var response = await Http.DeleteAsync($"api/todo/{item.Id}");
        if(response.IsSuccessStatusCode)
        {
            items.Remove(item);
        }
    }





}